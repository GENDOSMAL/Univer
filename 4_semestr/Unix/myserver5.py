import socket  # Импортируем модуль для работы с сокетами

sock = socket.socket()  # создаем новый объект класса сокет для работы с ними
# спрашиваем у пользователя с каким портом ему удобно работать
port = input("введите порт:")
if port == '':  # Проверяем на пустоту введенную строку
    port = 9090  # если строка пустая, то задаем дефолтное значение
# добавляем возможность переиспользования локального адресса повторно
sock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
# socket.SOL_SOCKET означает что мы работает с сокетом уровне этой библиотеки.
# socket.SO_REUSEADDR позволяет использовать локальный адресс повторно
# Задаем порт и адресс (так как параметр пустой это будет 127.0.0.1)
sock.bind(('', int(port)))

while True:  # Запускаем бесконечный цикл до тех пор пока не будет введена определенная команда, на общую остановку работы сокет соединения
    print("слушаем порт", int(port))  # Выводим то какой порт мы слушаем
    sock.listen(1)  # включаем сокет на прослущивание

    try: # начало обработки ошибок на создание подключения
        conn, addr = sock.accept()# ждем и получаем описание созданного подключения
    except KeyboardInterrupt as k: # обрабатываем исключение, которое вызвано желанием пользователя остановить программу
        print(k) # сообщаем пользователю текст ошибки, который
        print("Stop program") # сообщаем пользователю что программа останавливается
        exit() # выходим из программы

    print('connection established:', addr[1]) #печатаем адрес клиента, с которым произошло соединение

    while True:# условно бексконечный цикл, на случай пока не будет остановлено содинени с клиентом

        try:#начало обработки ошибки получения данных
            data = conn.recv(1024).decode("utf8") #ждем, получаем и декодируем данные присланные нам от клиента по открытому соедеинению
        except ConnectionResetError as e: # обрабатывем ошибку на случай когда, клиент разарвал содение
            print(e) #печатаем ошибку
            print("lost connection from client") # печатаем сообщение, о том что потеряно соединение
            exit() #выходим из программы (но только зачем не понятно, можно же продолжить работать)
        except KeyboardInterrupt as k: # обрабатываем исключение, которое вызвано желанием пользователя остановить программу
            print(k) # сообщаем пользователю текст ошибки, который
            print("Stop program") # сообщаем пользователю что программа останавливается
            print("lost connection from client") # сообщаем пользователю, что соединения потеряно
            exit() # выходим из программы

        if not data: # прооверяем что присланные данные пусты
            print("Конец связи") # сообщаем пользователю, что выходим
            break # выходим из цикла обработки соедеинения, так как нет данных

        if "sstop" in data:  # проверяем что переданные данные не озночают окончание
            break  # если пора закрываться выходим из цикла обработки соединения
        conn.send(data.upper().encode()) # отправляем по соединению присланные данные, но в верхнем регистре

    if "sstop" in data:  # проверяем что переданная строка означает окончание работы сервера
        break  # Выходим из цикла так как пришла команда на закрытие

conn.close()  # полностью закрываем сокет для работы
