17. Как организованы драйверы устройств в Linux?
Драйвер устройств – это некоторый программный продукт, который предназначен для управления функциями некоторого устройства. Необходимость драйверов обусловлена тем, что каждое отдельное устройство может иметь свой строго фиксированный набор спец команд с помощью, которых этим устройство можно управлять.
В Linux драйвера бывают трех типов:
•	Встроенные в ядро: Соответствующие устройства автоматически обнаруживаются системой и становятся доступны для приложений. Обычно таким образом обеспечивается поддержка тех устройств, которые необходимы для монтирования корневой файловой системы и запуска компьютера. 
    Примерами таких устройств являются стандартный видеоконтроллер VGA, контроллеры IDE-дисков, материнская плата, последовательные и параллельные порты.
•	Драйвер как модуль ядра: Они оформлены в виде отдельных файлов и для их подключения (на этапе загрузки или впоследствии) необходимо выполнить отдельную команду подключения модуля, после чего будет обеспечено управление соответствующим устройством. 
    Если необходимость в использовании устройства отпала, модуль можно выгрузить из памяти (отключить). Поэтому использование модулей обеспечивает большую гибкость, так как каждый такой драйвер может быть переконфигурирован без остановки системы.
•	Деление между ядром и специальной утилитой: Часть функций выполняет ядро, а часть некоторая утилита. Например , для драйвера принтера ядро отвечает за взаимодействие с параллельным портом, 
    а формирование управляющих сигналов для принтера осуществляет демон печати lpd (который использует для этого специальную программу-фильтр)
Но надо специально отметить, что во всех трех случаях непосредственное взаимодействие с устройством осуществляет ядро или какой-то модуль ядра. А пользовательские программы взаимодействуют с драйверами устройств через специальные файлы, расположенные в каталоге /dev и его подкаталогах. То есть взаимодействие прикладных программ с аппаратной частью компьютера в ОС Linux осуществляется по следующей схеме:
устройство ‹-› ядро ‹-› специальный файл устройства ‹-› программа пользователя
Такая схема обеспечивает единый подход ко всем устройствам, которые с точки зрения приложений выглядят как обычные файлы.
